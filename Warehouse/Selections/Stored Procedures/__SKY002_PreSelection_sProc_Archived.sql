
CREATE PROCEDURE [Selections].[__SKY002_PreSelection_sProc_Archived]
AS
BEGIN

	DECLARE @SEGMENTATIONDATE DATE = GETDATE()

	-- UNIQUE HOUSEHOLD TABLE WITH BANKACCOUNTIDS
	IF OBJECT_ID('TEMPDB..#UNIQUE_HH_BANKACCOUNTID') IS NOT NULL DROP TABLE #UNIQUE_HH_BANKACCOUNTID
	SELECT	DISTINCT HouseholdID
			, BankAccountID
	INTO	#UNIQUE_HH_BANKACCOUNTID
	FROM	Warehouse.Relational.MFDD_Households 
	WHERE	EndDate IS NULL
	CREATE CLUSTERED INDEX CIX_HH ON #UNIQUE_HH_BANKACCOUNTID(HouseholdID)

	---- MAKE A SAMPLE FOR TESTING PURPOSES
	--IF OBJECT_ID('TEMPDB..#SAMPLE') IS NOT NULL DROP TABLE #SAMPLE
	--SELECT	  TOP 10000 
	--		  HouseholdID
	--		, BankAccountID
	--INTO	#SAMPLE
	--FROM	#UNIQUE_HH_BANKACCOUNTID


	-- CC TABLE - MARKET
	IF OBJECT_ID('TEMPDB..#CC') IS NOT NULL DROP TABLE #CC
	SELECT	  ConsumerCombinationID_DD
			, BrandID
	INTO	#CC
	FROM	Warehouse.Relational.ConsumerCombination_DD
	WHERE	BrandID IN (395,478,1194,1193)
	CREATE CLUSTERED INDEX CIX_CC ON #CC(ConsumerCombinationID_DD)

	-- SKY CC TABLE	
	IF OBJECT_ID('TEMPDB..#CC_SKY') IS NOT NULL DROP TABLE #CC_SKY
	SELECT	ConsumerCombinationID_DD
	INTO	#CC_SKY
	FROM	Warehouse.Relational.ConsumerCombination_DD
	WHERE	BrandID = 395
	CREATE CLUSTERED INDEX CIX_CC_SKY ON #CC_SKY(ConsumerCombinationID_DD)

	
	DECLARE @SEGMENTATIONDATE_90DaysBefore DATE = DATEADD(DAY,-90,@SEGMENTATIONDATE)

	-- FIND CURRENT SKY AND MARKET HOUSHOLDS
	IF OBJECT_ID('TEMPDB..#SKY_HOUSEHOLDS_L3M') IS NOT NULL DROP TABLE #SKY_HOUSEHOLDS_L3M
	SELECT	  A.HouseholdID
			, A.BankAccountID
			, SKY_FLAG
			, COMP_FLAG
	INTO	#SKY_HOUSEHOLDS_L3M
	FROM	(
				SELECT	  HouseholdID
						, BankAccountID
				FROM	#UNIQUE_HH_BANKACCOUNTID
						--#SAMPLE 
			) A
	LEFT JOIN 
			(
				SELECT	  BankAccountID
						, MAX(CASE WHEN BrandID = 395 THEN 1 ELSE 0 END) AS SKY_FLAG
						, MAX(CASE WHEN BRANDID <> 395 THEN 1 ELSE 0 END) AS COMP_FLAG
				FROM	Warehouse.Relational.ConsumerTransaction_DD CT WITH(NOLOCK)
				JOIN	#CC CC
					ON  CT.ConsumerCombinationID_DD = CC.ConsumerCombinationID_DD
				WHERE	TranDate >= @SEGMENTATIONDATE_90DaysBefore -- 
					AND TranDate <= @SEGMENTATIONDATE -- 
				GROUP BY  BankAccountID

			) B
		ON A.BankAccountID = B.BankAccountID


	-- PER HOUSEHOLD WHO IS A SKY AND COMP SHOPPER
	IF OBJECT_ID('TEMPDB..#SKY_ACCOUNTS_PER_HOUSEHOLD') IS NOT NULL DROP TABLE #SKY_ACCOUNTS_PER_HOUSEHOLD
	SELECT	  HouseholdID
			, MAX(SKY_FLAG) AS SKY_FLAG
			, MAX(COMP_FLAG) AS COMP_FLAG
	INTO	#SKY_ACCOUNTS_PER_HOUSEHOLD
	FROM	#SKY_HOUSEHOLDS_L3M
	GROUP BY  HouseholdID

	-- HOUEHOLDS WITH SKY AND COMP SPEND
	IF OBJECT_ID('TEMPDB..#SKY_AND_COMP_HOUSEHOLDS') IS NOT NULL DROP TABLE #SKY_AND_COMP_HOUSEHOLDS
	SELECT	HouseholdID
	INTO	#SKY_AND_COMP_HOUSEHOLDS
	FROM	#SKY_ACCOUNTS_PER_HOUSEHOLD
	WHERE	SKY_FLAG = 1 AND COMP_FLAG = 1
	CREATE NONCLUSTERED INDEX NCIX_SKY_COMP ON #SKY_AND_COMP_HOUSEHOLDS(HouseholdID)


	-- HOW MANY TRANSACTION WITH SKY IN THE LAST X DAYS
	IF OBJECT_ID('TEMPDB..#SKY_TRANSACTIONS_LAST_100D_SUBSET') IS NOT NULL DROP TABLE #SKY_TRANSACTIONS_LAST_100D_SUBSET
	SELECT	  A.HouseholdID
			, B.BankAccountID 
			, TRANSACTIONS
	INTO	#SKY_TRANSACTIONS_LAST_100D_SUBSET
	FROM	(
				SELECT	  UH.HouseholdID
						, BankAccountID
				FROM	--#SAMPLE UH 
						#UNIQUE_HH_BANKACCOUNTID UH
				JOIN	#SKY_AND_COMP_HOUSEHOLDS H
					ON  UH.HouseholdID = H.HouseholdID
			) A
	LEFT JOIN 
			(
				SELECT	  BankAccountID
						, COUNT(1) AS TRANSACTIONS
				FROM	Warehouse.Relational.ConsumerTransaction_DD CT WITH(NOLOCK)
				JOIN	#CC_SKY CC
					ON  CT.ConsumerCombinationID_DD = CC.ConsumerCombinationID_DD
				WHERE	TranDate >= @SEGMENTATIONDATE_90DaysBefore -- 100 DAYS BEFORE TODAY, APPROX 3 MONTHS
					AND TranDate <= @SEGMENTATIONDATE
				GROUP BY  BankAccountID
			) B
		ON A.BankAccountID = B.BankAccountID

	-- THE TARGETING WILL ONLY SELECT THOSE THAT HAVE MADE 3 TRANSACTIONS WITH SKY IN THE LAST 100 DAYS
	IF OBJECT_ID('TEMPDB..#THREE_TRANSACTIONS') IS NOT NULL DROP TABLE #THREE_TRANSACTIONS
	SELECT	HouseholdID
	INTO	#THREE_TRANSACTIONS
	FROM	#SKY_TRANSACTIONS_LAST_100D_SUBSET
	WHERE	TRANSACTIONS = 3

	-- FIND THE AMOUNTS AND DATES OF THESE TRANSACTIONS
	IF OBJECT_ID('TEMPDB..#SKY_TRANSACTIONS_LAST_100D_SUBSET_WITH_TRANDETAILS') IS NOT NULL DROP TABLE #SKY_TRANSACTIONS_LAST_100D_SUBSET_WITH_TRANDETAILS
	SELECT	  A.HouseholdID
			, B.BankAccountID 
			, TranDate
			, Amount
			, TRAN_NUMBER
	INTO	#SKY_TRANSACTIONS_LAST_100D_SUBSET_WITH_TRANDETAILS
	FROM	(
				SELECT	  HouseholdID
						, BankAccountID
				FROM	#UNIQUE_HH_BANKACCOUNTID
				WHERE   HouseholdID IN (SELECT HouseholdID FROM	#THREE_TRANSACTIONS)
			) A
	LEFT JOIN 
			(
				SELECT	  BankAccountID
						, Amount
						, TranDate
						, ROW_NUMBER() OVER (PARTITION BY BANKACCOUNTID ORDER BY TRANDATE ASC) AS TRAN_NUMBER
				FROM	Warehouse.Relational.ConsumerTransaction_DD CT WITH(NOLOCK)
				JOIN	#CC_SKY CC
					ON  CT.ConsumerCombinationID_DD = CC.ConsumerCombinationID_DD
				WHERE	TranDate >= @SEGMENTATIONDATE_90DaysBefore -- 100 DAYS BEFORE TODAY, APPROX 3 MONTHS
					AND TranDate <= @SEGMENTATIONDATE
			) B
		ON A.BankAccountID = B.BankAccountID

	-- CLEAN UP THE OUTPUT OF THE TABLE ABOVE
	IF OBJECT_ID('TEMPDB..#PRE_SELECTION') IS NOT NULL DROP TABLE #PRE_SELECTION
	SELECT	  HouseholdID
			, BankAccountID
			, TranDate
			, Amount
			, TRAN_NUMBER
	INTO	#PRE_SELECTION
	FROM	#SKY_TRANSACTIONS_LAST_100D_SUBSET_WITH_TRANDETAILS
	WHERE	BankAccountID IS NOT NULL

	-- USE LAG FUNCTIONS TO BRING ALL TRANSACTIONS TO THE SAME LINE
	IF OBJECT_ID('TEMPDB..#PRE_SELECTION_2') IS NOT NULL DROP TABLE #PRE_SELECTION_2
	SELECT	  HouseholdID
			, BankAccountID
			, TranDate AS TRANDATE_3
			, LAG(TranDate,1) OVER (PARTITION BY BANKACCOUNTID ORDER BY TRANDATE) AS TRANDATE_2
			, LAG(TranDate,2) OVER (PARTITION BY BANKACCOUNTID ORDER BY TRANDATE) AS TRANDATE_1
			, Amount AS Amount_3
			, LAG(Amount,1) OVER (PARTITION BY BANKACCOUNTID ORDER BY TRANDATE) AS Amount_2
			, LAG(Amount,2) OVER (PARTITION BY BANKACCOUNTID ORDER BY TRANDATE) AS Amount_1
			, TRAN_NUMBER					
	INTO	#PRE_SELECTION_2
	FROM	#PRE_SELECTION

	-- RESTRICT TO JUST ONE ROW PER HOUSEHOLD
	IF OBJECT_ID('TEMPDB..#PRE_SELECTION_3') IS NOT NULL DROP TABLE #PRE_SELECTION_3
	SELECT	  HouseholdID
			, BankAccountID
			, TRANDATE_1
			, TRANDATE_2
			, TRANDATE_3
			, Amount_1
			, Amount_2
			, Amount_3
	INTO	#PRE_SELECTION_3
	FROM	#PRE_SELECTION_2
	WHERE   TRAN_NUMBER = 3

	-- REMOVE THOSE WHO HAVEN'T MADE 3 EQUAL TRANSACTIONS AND THOSE WHO DON'T TRANSACT 1 MONTH APART
	IF OBJECT_ID('TEMPDB..#LAST_3_SKY_TRANS') IS NOT NULL DROP TABLE #LAST_3_SKY_TRANS
	SELECT	  *
	INTO	#LAST_3_SKY_TRANS
	FROM	#PRE_SELECTION_3
	WHERE   ((DATEDIFF(DAY,TRANDATE_2,TRANDATE_3) BETWEEN 27 AND 33)
		OR	(DATEDIFF(DAY,TRANDATE_1,TRANDATE_2) BETWEEN 27 AND 33))

	
	-- REMOVE HOUSEHOLDS WITH MORE THAN 1 BANK ACCOUNT THAT HAS A SKY ACCOUNT

	IF OBJECT_ID('TEMPDB..#HOUSEHOLDS_TO_EXCLUDE') IS NOT NULL DROP TABLE #HOUSEHOLDS_TO_EXCLUDE
	SELECT	HouseholdID
	INTO	#HOUSEHOLDS_TO_EXCLUDE
	FROM	#LAST_3_SKY_TRANS
	GROUP BY HouseholdID
	HAVING COUNT(1) > 1

	IF OBJECT_ID('TEMPDB..#FINAL_PRESELECTION') IS NOT NULL DROP TABLE #FINAL_PRESELECTION
	SELECT	*
	INTO	#FINAL_PRESELECTION
	FROM	#LAST_3_SKY_TRANS
	WHERE	HouseholdID NOT IN (SELECT HouseholdID FROM #HOUSEHOLDS_TO_EXCLUDE)
		AND TRANDATE_3 <> '2020-02-26' -- SHOULD EXCLUDE EVERYONE WHO WILL GO ON TO TRANSACT ON THE FIRST DAY OF THE OFFER.

	

	-- FINAL FEW STEPS TO GET A LIST OF SOURCEUIDS FOR RORY
	IF OBJECT_ID('TEMPDB..#UNIQUE_HH_SOURCEUID') IS NOT NULL DROP TABLE #UNIQUE_HH_SOURCEUID
	SELECT	  DISTINCT HouseholdID
			, SourceUID
	INTO	#UNIQUE_HH_SOURCEUID
	FROM	Warehouse.Relational.MFDD_Households
	WHERE	EndDate IS NULL

	
	IF OBJECT_ID('TEMPDB..#SOURCEUIDS_FOR_SKY_SHOPPER_OFFER') IS NOT NULL DROP TABLE #SOURCEUIDS_FOR_SKY_SHOPPER_OFFER
	SELECT	SourceUID
	INTO	#SOURCEUIDS_FOR_SKY_SHOPPER_OFFER
	FROM	#UNIQUE_HH_SOURCEUID
	WHERE	HouseholdID IN (SELECT HouseholdID FROM #FINAL_PRESELECTION)

	IF OBJECT_ID('SANDBOX.CONAL.SKY_SHOPPER_260320') IS NOT NULL DROP TABLE SANDBOX.CONAL.SKY_SHOPPER_260320
	SELECT	SourceUID
	INTO	SANDBOX.CONAL.SKY_SHOPPER_260320
	FROM	#UNIQUE_HH_SOURCEUID
	WHERE	HouseholdID IN (SELECT HouseholdID FROM #FINAL_PRESELECTION)

--		Select eligible customers
	IF OBJECT_ID('Warehouse.Selections.SKY002_PreSelection') IS NOT NULL DROP TABLE Warehouse.Selections.SKY002_PreSelection
	SELECT FanID
	INTO Warehouse.Selections.SKY002_PreSelection		
	FROM SANDBOX.CONAL.SKY_SHOPPER_260320 ss
	INNER JOIN Relational.Customer cu
		ON cu.SourceUID = cu.SourceUID

END