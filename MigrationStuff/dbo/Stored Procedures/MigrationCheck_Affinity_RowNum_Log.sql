CREATE PROCEDURE [dbo].[MigrationCheck_Affinity_RowNum_Log] AS 

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DECLARE @RowCount BIGINT

IF 1 = 1 BEGIN

	IF OBJECT_ID('tempdb..#RowNum_LogDIMAIN2') IS NOT NULL DROP TABLE #RowNum_LogDIMAIN2;
	SELECT *
	INTO #RowNum_LogDIMAIN2 FROM Affinity.Processing.RowNum_Log WHERE FileID > 34788
	SET @RowCount = @@ROWCOUNT
	CREATE UNIQUE CLUSTERED INDEX ucx_FanID ON #RowNum_LogDIMAIN2 (FileID, RowNum)

	IF OBJECT_ID('tempdb..#RowNum_LogDIDEVTEST') IS NOT NULL DROP TABLE #RowNum_LogDIDEVTEST;
	SELECT * 
	INTO #RowNum_LogDIDEVTEST 
	FROM OPENQUERY (DIDEVTEST, 'SELECT * FROM Affinity.Processing.RowNum_Log WHERE FileID > 34788')
	CREATE UNIQUE CLUSTERED INDEX ucx_FanID ON #RowNum_LogDIDEVTEST (FileID, RowNum)
	-- (7355323 rows affected) / 00:00:15

	IF OBJECT_ID('tempdb..#RowNum_LogDIMAIN') IS NOT NULL DROP TABLE #RowNum_LogDIMAIN;
	SELECT * 
	INTO #RowNum_LogDIMAIN 
	FROM OPENQUERY (DIMAIN, 'SELECT * FROM Affinity.Processing.RowNum_Log WHERE FileID > 34788')
	CREATE UNIQUE CLUSTERED INDEX ucx_FanID ON #RowNum_LogDIMAIN (FileID, RowNum)
	-- (7355323 rows affected) / 00:00:15
END
-- 00:01:23

SELECT TableName = 'Affinity.Processing.RowNum_Log', [Date] = GETDATE(), [RowCount] = @RowCount

;WITH NewRows AS (
	SELECT [Description] = 'DIDEVTEST-DIMAIN2', [RowCount] = COUNT(*) FROM (SELECT * FROM #RowNum_LogDIDEVTEST EXCEPT SELECT * FROM #RowNum_LogDIMAIN2) d -- 0
	UNION ALL SELECT 'DIMAIN2-DIDEVTEST', COUNT(*) FROM (SELECT * FROM #RowNum_LogDIMAIN2 EXCEPT SELECT * FROM #RowNum_LogDIDEVTEST) d -- 0
	UNION ALL
	SELECT 'DIMAIN-DIDEVTEST', COUNT(*) FROM (SELECT * FROM #RowNum_LogDIMAIN EXCEPT SELECT * FROM #RowNum_LogDIDEVTEST) d -- 0
	UNION ALL SELECT 'DIDEVTEST-DIMAIN', COUNT(*) FROM (SELECT * FROM #RowNum_LogDIDEVTEST EXCEPT SELECT * FROM #RowNum_LogDIMAIN) d -- 0
	UNION ALL
	SELECT 'DIMAIN2-DIMAIN', COUNT(*) FROM (SELECT * FROM #RowNum_LogDIMAIN2 EXCEPT SELECT * FROM #RowNum_LogDIMAIN) d -- 0
	UNION ALL SELECT 'DIMAIN-DIMAIN2', COUNT(*) FROM (SELECT * FROM #RowNum_LogDIMAIN EXCEPT SELECT * FROM #RowNum_LogDIMAIN2) d -- 0
)
SELECT *
FROM NewRows n
-- 6 / 00:03:04

	
IF OBJECT_ID('tempdb..#DIMAIN2') IS NOT NULL DROP TABLE #DIMAIN2; SELECT ServerName = 'DIMAIN2', FileID, [RowCount] = COUNT(*) INTO #DIMAIN2 FROM #RowNum_LogDIMAIN2 GROUP BY FileID;
IF OBJECT_ID('tempdb..#DIDEVTEST') IS NOT NULL DROP TABLE #DIDEVTEST; SELECT ServerName = 'DIDEVTEST', FileID, [RowCount] = COUNT(*) INTO #DIDEVTEST FROM #RowNum_LogDIDEVTEST GROUP BY FileID;
IF OBJECT_ID('tempdb..#DIMAIN') IS NOT NULL DROP TABLE #DIMAIN; SELECT ServerName = 'DIMAIN', FileID, [RowCount] = COUNT(*) INTO #DIMAIN FROM #RowNum_LogDIMAIN GROUP BY FileID;

;WITH Files AS (SELECT DISTINCT FileID FROM (SELECT FileID FROM #DIMAIN2 UNION SELECT FileID FROM #DIDEVTEST UNION SELECT FileID FROM #DIMAIN) d )
SELECT 
	f.FileID, 
	DIMAIN2 = d2.[RowCount],
	DIDEVTEST = di.[RowCount],
	DIMAIN = d.[RowCount]
FROM Files f
LEFT JOIN #DIMAIN2 d2 ON d2.FileID = f.FileID
LEFT JOIN #DIDEVTEST di ON di.FileID = f.FileID
LEFT JOIN #DIMAIN d ON d.FileID = f.FileID
ORDER BY f.FileID DESC;


RETURN 0
