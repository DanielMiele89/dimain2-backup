CREATE PROCEDURE [dbo].[MigrationCheck_WHB_PartnerTrans] AS

SELECT 'Relational.PartnerTrans'

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

IF 1 = 1 BEGIN

	DECLARE @MatchID INT
	SELECT TOP(1) @MatchID = MatchID FROM (
		SELECT TOP(10000000) * FROM Warehouse.relational.PartnerTrans ORDER BY MatchID DESC
	) d
	ORDER BY MatchID


	SELECT @MatchID -- 304578221

	DECLARE @SQLStatement VARCHAR(8000) = 'SELECT MatchID, [hash] = CHECKSUM(*) FROM Warehouse.relational.PartnerTrans WHERE MatchID >= ' + CAST(@MatchID AS VARCHAR(15));


	IF OBJECT_ID('tempdb..#PartnerTransDIMAIN2') IS NULL CREATE TABLE #PartnerTransDIMAIN2 (MatchID INT, [hash] INT);
	INSERT INTO #PartnerTransDIMAIN2 (MatchID, [hash])
		EXEC(@SQLStatement);

	CREATE UNIQUE CLUSTERED INDEX ucx_MatchID ON #PartnerTransDIMAIN2 (MatchID);
	-- (10000000 rows affected) / 00:03:51


	IF OBJECT_ID('tempdb..#PartnerTransDIDEVTEST') IS NULL CREATE TABLE #PartnerTransDIDEVTEST (MatchID INT, [hash] INT);
	INSERT INTO #PartnerTransDIDEVTEST (MatchID, [hash])
		EXEC('SELECT * FROM OPENQUERY(DIDEVTEST,''' + @SQLStatement + ''')');

	CREATE UNIQUE CLUSTERED INDEX ucx_MatchID ON #PartnerTransDIDEVTEST (MatchID);
	-- (10000000 rows affected) / 00:02:57


	IF OBJECT_ID('tempdb..#PartnerTransDIMAIN') IS NULL CREATE TABLE #PartnerTransDIMAIN (MatchID INT, [hash] INT);
	INSERT INTO #PartnerTransDIMAIN (MatchID, [hash])
		EXEC('SELECT * FROM OPENQUERY(DIMAIN,''' + @SQLStatement + ''')');

	CREATE UNIQUE CLUSTERED INDEX ucx_MatchID ON #PartnerTransDIMAIN (MatchID);
	-- (10000000 rows affected) / 00:01:55

END



;WITH 
NewRows AS (
	SELECT [Description] = 'DIDEVTEST-DIMAIN2', [RowCount] = COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIDEVTEST EXCEPT SELECT MatchID FROM #PartnerTransDIMAIN2) d -- 0
	UNION ALL SELECT 'DIMAIN2-DIDEVTEST', COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIMAIN2 EXCEPT SELECT MatchID FROM #PartnerTransDIDEVTEST) d -- 0
	UNION ALL
	SELECT 'DIMAIN-DIDEVTEST', COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIMAIN EXCEPT SELECT MatchID FROM #PartnerTransDIDEVTEST) d -- 0
	UNION ALL SELECT 'DIDEVTEST-DIMAIN', COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIDEVTEST EXCEPT SELECT MatchID FROM #PartnerTransDIMAIN) d -- 0
	UNION ALL
	SELECT 'DIMAIN2-DIMAIN', COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIMAIN2 EXCEPT SELECT MatchID FROM #PartnerTransDIMAIN) d -- 0
	UNION ALL SELECT 'DIMAIN-DIMAIN2', COUNT(*) FROM (SELECT MatchID FROM #PartnerTransDIMAIN EXCEPT SELECT MatchID FROM #PartnerTransDIMAIN2) d -- 0
), 
ChangedRows AS (
	SELECT [Description] = 'DIDEVTEST-DIMAIN2', [RowCount] = COUNT(*) FROM (SELECT * FROM #PartnerTransDIDEVTEST EXCEPT SELECT * FROM #PartnerTransDIMAIN2) d -- 17
	UNION ALL SELECT 'DIMAIN2-DIDEVTEST', COUNT(*) FROM (SELECT * FROM #PartnerTransDIMAIN2 EXCEPT SELECT * FROM #PartnerTransDIDEVTEST) d -- 17
	UNION ALL
	SELECT 'DIMAIN-DIDEVTEST', COUNT(*) FROM (SELECT * FROM #PartnerTransDIMAIN EXCEPT SELECT * FROM #PartnerTransDIDEVTEST) d -- 311
	UNION ALL SELECT 'DIDEVTEST-DIMAIN', COUNT(*) FROM (SELECT * FROM #PartnerTransDIDEVTEST EXCEPT SELECT * FROM #PartnerTransDIMAIN) d -- 311
	UNION ALL
	SELECT 'DIMAIN2-DIMAIN', COUNT(*) FROM (SELECT * FROM #PartnerTransDIMAIN2 EXCEPT SELECT * FROM #PartnerTransDIMAIN) d -- 296
	UNION ALL SELECT 'DIMAIN-DIMAIN2', COUNT(*) FROM (SELECT * FROM #PartnerTransDIMAIN EXCEPT SELECT * FROM #PartnerTransDIMAIN2) d -- 296
)
SELECT n.[Description], n.[RowCount] AS [New rows], c.[RowCount]-n.[RowCount] AS [Changed Rows]
FROM NewRows n
INNER JOIN ChangedRows c 
	ON c.[Description] = n.[Description]
-- 6 / 00:25:45


RETURN 0





